@model PPParkingLot.Models.Insert.ClientInsertViewModel
@{
    ViewData["Title"] = "Register";
}

<h1>Register</h1>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Client</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="date" name="BirthDate" id="BirthDate" />
                <span class="text-danger" id="errorBirthDate" name="errorBirthDate"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                <input class="form-control" type="password" name="Password" id="Password" />
                <span class="text-danger" id="errorPassword" name="errorPassword"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SystemEntranceDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="date" name="SystemEntranceDate" id="SystemEntranceDate" />
                <span class="text-danger" id="errorSystemEntranceDate" name="errorSystemEntranceDate"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SystemExitDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="date" name="SystemExitDate" id="SystemExitDate" />
                <span class="text-danger" id="errorSystemExitDate" name="errorSystemExitDate"></span>
            </div>
        </div>

        @{
            string[] AccessLevel = Enum.GetNames(typeof(DataTransferObject.Enums.EAccessLevel));
        }


        <div class="form-group">
            @Html.LabelFor(model => model.AccessLevel, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                <select class="form-control" name="AccessLevel" id="AccessLevel">
                    @for (int i = 0; i < AccessLevel.Length; i++)
                    {
                        <option value="@i">@AccessLevel[i]</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

